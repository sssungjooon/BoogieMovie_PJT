{"ast":null,"code":"import Vue from 'vue';\nimport VueRouter from 'vue-router';\nimport HomeView from '../views/HomeView.vue';\nimport SignUpView from '../views/SignUpView.vue';\nimport LogInView from '../views/LogInView.vue';\nimport MyPageView from '../views/MyPageView.vue';\nimport RecommendedView from '../views/RecommendedView.vue';\nimport LikedMoviesView from '../views/LikedMoviesView.vue';\nimport UserReviewsView from '../views/UserReviewsView.vue';\nimport ChangeInfoView from '../views/ChangeInfoView.vue';\nimport NotFound404 from '../views/NotFound404';\nimport store from '../store/index.js';\nVue.use(VueRouter);\n\n// router.beforeEach((to, from, next) => {\n//   const isLoggedIn = true\n//   const authPages = ['recommended', 'mypage']\n//   const isAuthRequired = authPages.includes(to.name)\n//   if (isAuthRequired && !isLoggedIn) {\n//       alert('로그인이 필요한 서비스입니다')\n//       next({name: 'login'})\n//     } else {\n//       next()\n//     }\n// })\n// 이거 고치기 !!\n//const isLoggedIn = true\nconst isLoggedIn = store.state.token;\nconst routes = [{\n  path: '/',\n  name: 'home',\n  component: HomeView\n}, {\n  path: '/signup',\n  name: 'signup',\n  component: SignUpView,\n  beforeEnter(to, from, next) {\n    if (isLoggedIn === true) {\n      alert('이미 로그인 하셨습니다');\n      next({\n        name: 'home'\n      });\n    } else {\n      next();\n    }\n  }\n}, {\n  path: '/login',\n  name: 'login',\n  component: LogInView,\n  beforeEnter(to, from, next) {\n    if (isLoggedIn === true) {\n      alert('이미 로그인 하셨습니다');\n      next({\n        name: 'home'\n      });\n    } else {\n      next();\n    }\n  }\n}, {\n  path: '/mypage',\n  name: 'mypage',\n  component: MyPageView,\n  // redirect: \"/mypage\",\n  children: [{\n    path: 'likedmovies',\n    name: 'likedmovies',\n    component: LikedMoviesView\n  }, {\n    path: 'userreviews',\n    name: 'userreviews',\n    component: UserReviewsView\n  }, {\n    path: 'changeinfo',\n    name: 'changeinfo',\n    component: ChangeInfoView\n  }]\n}, {\n  path: '/recommended',\n  name: 'recommended',\n  component: RecommendedView\n}, {\n  path: '/404',\n  name: 'NotFound404',\n  component: NotFound404\n}, {\n  path: '*',\n  redirect: '/404'\n}];\nconst router = new VueRouter({\n  mode: 'history',\n  base: process.env.BASE_URL,\n  routes\n});\nexport default router;\nrouter.beforeEach((to, from, next) => {\n  // 로그인 여부 : 고치기..\n  // 2022.11.23 const isLoggedIn = true\n  const isLoggedIn = store.state.token;\n\n  // 로그인이 필요한 페이지\n  const authPages = ['recommended', 'mypage'];\n  // const allowAllPages = ['login']\n\n  const isAuthRequired = authPages.includes(to.name);\n  // const isAuthRequired = !allowAllPages.includes(to.name)\n\n  if (isAuthRequired && !isLoggedIn) {\n    // console.log('Login으로 이동!')\n    alert('로그인이 필요한 페이지입니다');\n    next({\n      name: 'login'\n    });\n  } else {\n    // console.log('to로 이동!')\n    next();\n  }\n});","map":{"version":3,"names":["Vue","VueRouter","HomeView","SignUpView","LogInView","MyPageView","RecommendedView","LikedMoviesView","UserReviewsView","ChangeInfoView","NotFound404","store","use","isLoggedIn","state","token","routes","path","name","component","beforeEnter","to","from","next","alert","children","redirect","router","mode","base","process","env","BASE_URL","beforeEach","authPages","isAuthRequired","includes"],"sources":["/Users/jeontaeyeong/Desktop/1123pjt/final_pjt_front/src/router/index.js"],"sourcesContent":["import Vue from 'vue'\nimport VueRouter from 'vue-router'\nimport HomeView from '../views/HomeView.vue'\nimport SignUpView from '../views/SignUpView.vue'\nimport LogInView from '../views/LogInView.vue'\nimport MyPageView from '../views/MyPageView.vue'\nimport RecommendedView from '../views/RecommendedView.vue'\nimport LikedMoviesView from '../views/LikedMoviesView.vue'\nimport UserReviewsView from '../views/UserReviewsView.vue'\nimport ChangeInfoView from '../views/ChangeInfoView.vue'\nimport NotFound404 from '../views/NotFound404'\nimport store from '../store/index.js'\nVue.use(VueRouter)\n\n\n// router.beforeEach((to, from, next) => {\n//   const isLoggedIn = true\n//   const authPages = ['recommended', 'mypage']\n//   const isAuthRequired = authPages.includes(to.name)\n//   if (isAuthRequired && !isLoggedIn) {\n//       alert('로그인이 필요한 서비스입니다')\n//       next({name: 'login'})\n//     } else {\n//       next()\n//     }\n// })\n// 이거 고치기 !!\n//const isLoggedIn = true\nconst isLoggedIn = store.state.token\nconst routes = [\n  {\n    path: '/',\n    name: 'home',\n    component: HomeView\n  },\n  {\n    path: '/signup',\n    name: 'signup',\n    component: SignUpView,\n    beforeEnter(to, from, next) {\n      if (isLoggedIn === true) {\n        alert('이미 로그인 하셨습니다')\n        next({name:'home'})\n      } else {\n        next()\n      }\n    }\n  },\n  {\n    path: '/login',\n    name: 'login',\n    component: LogInView,\n    beforeEnter(to, from, next) {\n      if (isLoggedIn === true) {\n        alert('이미 로그인 하셨습니다')\n        next({name:'home'})\n      } else {\n        next()\n      }\n    }\n  },\n  {\n    path: '/mypage',\n    name: 'mypage',\n    component: MyPageView,\n    // redirect: \"/mypage\",\n    children: [\n      {\n        path: 'likedmovies',\n        name: 'likedmovies',\n        component: LikedMoviesView,\n      },\n      {\n        path: 'userreviews',\n        name: 'userreviews',\n        component: UserReviewsView,\n      },\n      {\n        path: 'changeinfo',\n        name: 'changeinfo',\n        component: ChangeInfoView,\n      },\n    ]\n  },\n  {\n    path: '/recommended',\n    name: 'recommended',\n    component: RecommendedView\n  },\n  {\n    path: '/404',\n    name: 'NotFound404',\n    component: NotFound404\n  },\n  {\n    path: '*',\n    redirect: '/404'\n  }\n\n]\n\nconst router = new VueRouter({\n  mode: 'history',\n  base: process.env.BASE_URL,\n  routes\n})\n\nexport default router\n\nrouter.beforeEach((to, from, next) => {\n  // 로그인 여부 : 고치기..\n  // 2022.11.23 const isLoggedIn = true\n  const isLoggedIn = store.state.token\n\n  // 로그인이 필요한 페이지\n  const authPages = ['recommended', 'mypage']\n  // const allowAllPages = ['login']\n\n  const isAuthRequired = authPages.includes(to.name)\n  // const isAuthRequired = !allowAllPages.includes(to.name)\n\n  if (isAuthRequired && !isLoggedIn) {\n    // console.log('Login으로 이동!')\n    alert('로그인이 필요한 페이지입니다')\n    next({ name: 'login' })\n  } else {\n    // console.log('to로 이동!')\n    next()\n  }\n})\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
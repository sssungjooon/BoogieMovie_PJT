{"ast":null,"code":"import Vue from 'vue';\nimport VueRouter from 'vue-router';\nimport HomeView from '../views/HomeView.vue';\nimport SignUpView from '../views/SignUpView.vue';\nimport LogInView from '../views/LogInView.vue';\nimport MyPageView from '../views/MyPageView.vue';\nimport RecommendedView from '../views/RecommendedView.vue';\nVue.use(VueRouter);\nrouter.beforeEach((to, from, next) => {\n  const isLoggedIn = true;\n  const authPages = ['recommended', 'mypage'];\n  const isAuthRequired = authPages.includes(to.name);\n});\nrouter.beforeEach((to, from, next) => {\n  if (isAuthRequired && !isLoggedIn) {\n    alert('로그인이 필요한 서비스입니다');\n    next({\n      name: 'login'\n    });\n  } else {\n    next();\n  }\n});\nconst routes = [{\n  path: '/',\n  name: 'home',\n  component: HomeView\n}, {\n  path: '/signup',\n  name: 'signup',\n  component: SignUpView\n}, {\n  path: '/login',\n  name: 'login',\n  component: LogInView\n}, {\n  path: '/mypage',\n  name: 'mypage',\n  component: MyPageView\n}, {\n  path: '/recommended',\n  name: 'recommended',\n  component: RecommendedView\n}];\nconst router = new VueRouter({\n  mode: 'history',\n  base: process.env.BASE_URL,\n  routes\n});\nexport default router;","map":{"version":3,"names":["Vue","VueRouter","HomeView","SignUpView","LogInView","MyPageView","RecommendedView","use","router","beforeEach","to","from","next","isLoggedIn","authPages","isAuthRequired","includes","name","alert","routes","path","component","mode","base","process","env","BASE_URL"],"sources":["/Users/jeontaeyeong/Desktop/final_pjt/final_pjt_front/src/router/index.js"],"sourcesContent":["import Vue from 'vue'\nimport VueRouter from 'vue-router'\nimport HomeView from '../views/HomeView.vue'\nimport SignUpView from '../views/SignUpView.vue'\nimport LogInView from '../views/LogInView.vue'\nimport MyPageView from '../views/MyPageView.vue'\nimport RecommendedView from '../views/RecommendedView.vue'\n\nVue.use(VueRouter)\nrouter.beforeEach((to, from, next) => {\n  const isLoggedIn = true\n  const authPages = ['recommended', 'mypage']\n  const isAuthRequired = authPages.includes(to.name)\n})\n\nrouter.beforeEach((to, from, next) => {\n  if (isAuthRequired && !isLoggedIn) {\n    alert('로그인이 필요한 서비스입니다')\n    next({name: 'login'})\n    } else {\n      next()\n    }\n})\n\nconst routes = [\n  {\n    path: '/',\n    name: 'home',\n    component: HomeView\n  },\n  {\n    path: '/signup',\n    name: 'signup',\n    component: SignUpView\n  },\n  {\n    path: '/login',\n    name: 'login',\n    component: LogInView\n  },\n  {\n    path: '/mypage',\n    name: 'mypage',\n    component: MyPageView\n  },\n  {\n    path: '/recommended',\n    name: 'recommended',\n    component: RecommendedView\n  },\n\n]\n\nconst router = new VueRouter({\n  mode: 'history',\n  base: process.env.BASE_URL,\n  routes\n})\n\nexport default router\n"],"mappings":"AAAA,OAAOA,GAAG,MAAM,KAAK;AACrB,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,eAAe,MAAM,8BAA8B;AAE1DN,GAAG,CAACO,GAAG,CAACN,SAAS,CAAC;AAClBO,MAAM,CAACC,UAAU,CAAC,CAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;EACpC,MAAMC,UAAU,GAAG,IAAI;EACvB,MAAMC,SAAS,GAAG,CAAC,aAAa,EAAE,QAAQ,CAAC;EAC3C,MAAMC,cAAc,GAAGD,SAAS,CAACE,QAAQ,CAACN,EAAE,CAACO,IAAI,CAAC;AACpD,CAAC,CAAC;AAEFT,MAAM,CAACC,UAAU,CAAC,CAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;EACpC,IAAIG,cAAc,IAAI,CAACF,UAAU,EAAE;IACjCK,KAAK,CAAC,iBAAiB,CAAC;IACxBN,IAAI,CAAC;MAACK,IAAI,EAAE;IAAO,CAAC,CAAC;EACrB,CAAC,MAAM;IACLL,IAAI,EAAE;EACR;AACJ,CAAC,CAAC;AAEF,MAAMO,MAAM,GAAG,CACb;EACEC,IAAI,EAAE,GAAG;EACTH,IAAI,EAAE,MAAM;EACZI,SAAS,EAAEnB;AACb,CAAC,EACD;EACEkB,IAAI,EAAE,SAAS;EACfH,IAAI,EAAE,QAAQ;EACdI,SAAS,EAAElB;AACb,CAAC,EACD;EACEiB,IAAI,EAAE,QAAQ;EACdH,IAAI,EAAE,OAAO;EACbI,SAAS,EAAEjB;AACb,CAAC,EACD;EACEgB,IAAI,EAAE,SAAS;EACfH,IAAI,EAAE,QAAQ;EACdI,SAAS,EAAEhB;AACb,CAAC,EACD;EACEe,IAAI,EAAE,cAAc;EACpBH,IAAI,EAAE,aAAa;EACnBI,SAAS,EAAEf;AACb,CAAC,CAEF;AAED,MAAME,MAAM,GAAG,IAAIP,SAAS,CAAC;EAC3BqB,IAAI,EAAE,SAAS;EACfC,IAAI,EAAEC,OAAO,CAACC,GAAG,CAACC,QAAQ;EAC1BP;AACF,CAAC,CAAC;AAEF,eAAeX,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}